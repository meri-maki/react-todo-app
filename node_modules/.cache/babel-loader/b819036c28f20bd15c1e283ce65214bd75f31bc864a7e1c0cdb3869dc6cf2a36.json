{"ast":null,"code":"import { useMemo, useLayoutEffect, useEffect, useRef, useCallback } from 'react';\nfunction useCombinedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return useMemo(() => node => {\n    refs.forEach(ref => ref(node));\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nconst canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\nfunction isWindow(element) {\n  const elementString = Object.prototype.toString.call(element);\n  return elementString === '[object Window]' ||\n  // In Electron context the Window object serializes to [object global]\n  elementString === '[object global]';\n}\nfunction isNode(node) {\n  return 'nodeType' in node;\n}\nfunction getWindow(target) {\n  var _target$ownerDocument, _target$ownerDocument2;\n  if (!target) {\n    return window;\n  }\n  if (isWindow(target)) {\n    return target;\n  }\n  if (!isNode(target)) {\n    return window;\n  }\n  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;\n}\nfunction isDocument(node) {\n  const {\n    Document\n  } = getWindow(node);\n  return node instanceof Document;\n}\nfunction isHTMLElement(node) {\n  if (isWindow(node)) {\n    return false;\n  }\n  return node instanceof getWindow(node).HTMLElement;\n}\nfunction isSVGElement(node) {\n  return node instanceof getWindow(node).SVGElement;\n}\nfunction getOwnerDocument(target) {\n  if (!target) {\n    return document;\n  }\n  if (isWindow(target)) {\n    return target.document;\n  }\n  if (!isNode(target)) {\n    return document;\n  }\n  if (isDocument(target)) {\n    return target;\n  }\n  if (isHTMLElement(target)) {\n    return target.ownerDocument;\n  }\n  return document;\n}\n\n/**\r\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\r\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\r\n */\n\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\nfunction useEvent(handler) {\n  const handlerRef = useRef(handler);\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n  return useCallback(function () {\n    return handlerRef.current == null ? void 0 : handlerRef.current(...arguments);\n  }, []);\n}\nfunction useInterval() {\n  const intervalRef = useRef(null);\n  const set = useCallback((listener, duration) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  return [set, clear];\n}\nfunction useLatestValue(value) {\n  let dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [value];\n  const valueRef = useRef(value);\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n  return valueRef;\n}\nfunction useLazyMemo(callback, dependencies) {\n  const valueRef = useRef();\n  return useMemo(() => {\n    const newValue = callback(valueRef.current);\n    valueRef.current = newValue;\n    return newValue;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...dependencies]);\n}\nfunction useNodeRef(onChange) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef(null);\n  const setNodeRef = useCallback(element => {\n    if (element !== node.current) {\n      onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);\n    }\n    node.current = element;\n  },\n  //eslint-disable-next-line\n  []);\n  return [node, setNodeRef];\n}\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nlet ids = {};\nfunction useUniqueId(prefix, value) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\nfunction createAdjustmentFn(modifier) {\n  return function (object) {\n    for (var _len2 = arguments.length, adjustments = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      adjustments[_key2 - 1] = arguments[_key2];\n    }\n    return adjustments.reduce((accumulator, adjustment) => {\n      const entries = Object.entries(adjustment);\n      for (const [key, valueAdjustment] of entries) {\n        const value = accumulator[key];\n        if (value != null) {\n          accumulator[key] = value + modifier * valueAdjustment;\n        }\n      }\n      return accumulator;\n    }, {\n      ...object\n    });\n  };\n}\nconst add = /*#__PURE__*/createAdjustmentFn(1);\nconst subtract = /*#__PURE__*/createAdjustmentFn(-1);\nfunction hasViewportRelativeCoordinates(event) {\n  return 'clientX' in event && 'clientY' in event;\n}\nfunction isKeyboardEvent(event) {\n  if (!event) {\n    return false;\n  }\n  const {\n    KeyboardEvent\n  } = getWindow(event.target);\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\nfunction isTouchEvent(event) {\n  if (!event) {\n    return false;\n  }\n  const {\n    TouchEvent\n  } = getWindow(event.target);\n  return TouchEvent && event instanceof TouchEvent;\n}\n\n/**\r\n * Returns the normalized x and y coordinates for mouse and touch events.\r\n */\n\nfunction getEventCoordinates(event) {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.touches[0];\n      return {\n        x,\n        y\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.changedTouches[0];\n      return {\n        x,\n        y\n      };\n    }\n  }\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n  return null;\n}\nconst CSS = /*#__PURE__*/Object.freeze({\n  Translate: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n      const {\n        x,\n        y\n      } = transform;\n      return `translate3d(${x ? Math.round(x) : 0}px, ${y ? Math.round(y) : 0}px, 0)`;\n    }\n  },\n  Scale: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n      const {\n        scaleX,\n        scaleY\n      } = transform;\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    }\n  },\n  Transform: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(' ');\n    }\n  },\n  Transition: {\n    toString(_ref) {\n      let {\n        property,\n        duration,\n        easing\n      } = _ref;\n      return `${property} ${duration}ms ${easing}`;\n    }\n  }\n});\nconst SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nfunction findFirstFocusableNode(element) {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n  return element.querySelector(SELECTOR);\n}\nexport { CSS, add, canUseDOM, findFirstFocusableNode, getEventCoordinates, getOwnerDocument, getWindow, hasViewportRelativeCoordinates, isDocument, isHTMLElement, isKeyboardEvent, isNode, isSVGElement, isTouchEvent, isWindow, subtract, useCombinedRefs, useEvent, useInterval, useIsomorphicLayoutEffect, useLatestValue, useLazyMemo, useNodeRef, usePrevious, useUniqueId };","map":{"version":3,"mappings":"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","names":["useCombinedRefs","refs","useMemo","node","forEach","ref","canUseDOM","window","document","createElement","isWindow","element","elementString","Object","prototype","toString","call","isNode","getWindow","target","ownerDocument","_target$ownerDocument2","defaultView","isDocument","Document","isHTMLElement","HTMLElement","isSVGElement","SVGElement","getOwnerDocument","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useEvent","handler","handlerRef","useRef","current","useCallback","useInterval","intervalRef","set","listener","duration","setInterval","clear","clearInterval","useLatestValue","value","dependencies","valueRef","useLazyMemo","callback","newValue","useNodeRef","onChange","onChangeHandler","setNodeRef","usePrevious","ids","useUniqueId","prefix","id","createAdjustmentFn","modifier","object","adjustments","reduce","accumulator","adjustment","entries","key","valueAdjustment","add","subtract","hasViewportRelativeCoordinates","event","isKeyboardEvent","KeyboardEvent","isTouchEvent","TouchEvent","getEventCoordinates","touches","length","clientX","x","clientY","y","changedTouches","CSS","freeze","Translate","transform","Math","round","Scale","scaleX","scaleY","Transform","join","Transition","property","easing","SELECTOR","findFirstFocusableNode","matches","querySelector"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useCombinedRefs.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/execution-context/canUseDOM.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/type-guards/isWindow.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/type-guards/isNode.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/execution-context/getWindow.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/type-guards/isDocument.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/type-guards/isHTMLElement.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/type-guards/isSVGElement.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/execution-context/getOwnerDocument.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useIsomorphicLayoutEffect.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useEvent.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useInterval.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useLatestValue.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useLazyMemo.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useNodeRef.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/usePrevious.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/hooks/useUniqueId.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/adjustment.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/event/hasViewportRelativeCoordinates.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/event/isKeyboardEvent.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/event/isTouchEvent.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/coordinates/getEventCoordinates.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/css.ts","/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/@dnd-kit/utilities/src/focus/findFirstFocusableNode.ts"],"sourcesContent":["import {useMemo} from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: ((node: T) => void)[]\n): (node: T) => void {\n  return useMemo(\n    () => (node: T) => {\n      refs.forEach((ref) => ref(node));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n","// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n","export function isWindow(element: Object): element is typeof window {\n  const elementString = Object.prototype.toString.call(element);\n  return (\n    elementString === '[object Window]' ||\n    // In Electron context the Window object serializes to [object global]\n    elementString === '[object global]'\n  );\n}\n","export function isNode(node: Object): node is Node {\n  return 'nodeType' in node;\n}\n","import {isWindow} from '../type-guards/isWindow';\nimport {isNode} from '../type-guards/isNode';\n\nexport function getWindow(target: Event['target']): typeof window {\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return target.ownerDocument?.defaultView ?? window;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isDocument(node: Node): node is Document {\n  const {Document} = getWindow(node);\n\n  return node instanceof Document;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nimport {isWindow} from './isWindow';\n\nexport function isHTMLElement(node: Node | Window): node is HTMLElement {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isSVGElement(node: Node): node is SVGElement {\n  return node instanceof getWindow(node).SVGElement;\n}\n","import {isWindow, isHTMLElement, isDocument, isNode} from '../type-guards';\n\nexport function getOwnerDocument(target: Event['target']): Document {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n","import {useEffect, useLayoutEffect} from 'react';\n\nimport {canUseDOM} from '../execution-context';\n\n/**\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\n */\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? useLayoutEffect\n  : useEffect;\n","import {useCallback, useRef} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useEvent<T extends Function>(handler: T | undefined) {\n  const handlerRef = useRef<T | undefined>(handler);\n\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n\n  return useCallback(function (...args: any) {\n    return handlerRef.current?.(...args);\n  }, []);\n}\n","import {useCallback, useRef} from 'react';\n\nexport function useInterval() {\n  const intervalRef = useRef<number | null>(null);\n\n  const set = useCallback((listener: Function, duration: number) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  return [set, clear] as const;\n}\n","import {useRef} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useLatestValue<T extends any>(\n  value: T,\n  dependencies = [value]\n) {\n  const valueRef = useRef<T>(value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n\n  return valueRef;\n}\n","import {useMemo, useRef} from 'react';\n\nexport function useLazyMemo<T>(\n  callback: (prevValue: T | undefined) => T,\n  dependencies: any[]\n) {\n  const valueRef = useRef<T>();\n\n  return useMemo(\n    () => {\n      const newValue = callback(valueRef.current);\n      valueRef.current = newValue;\n\n      return newValue;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...dependencies]\n  );\n}\n","import {useRef, useCallback} from 'react';\n\nimport {useEvent} from './useEvent';\n\nexport function useNodeRef(\n  onChange?: (\n    newElement: HTMLElement | null,\n    previousElement: HTMLElement | null\n  ) => void\n) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef<HTMLElement | null>(null);\n  const setNodeRef = useCallback(\n    (element: HTMLElement | null) => {\n      if (element !== node.current) {\n        onChangeHandler?.(element, node.current);\n      }\n\n      node.current = element;\n    },\n    //eslint-disable-next-line\n    []\n  );\n\n  return [node, setNodeRef] as const;\n}\n","import {useRef, useEffect} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import {useMemo} from 'react';\n\nlet ids: Record<string, number> = {};\n\nexport function useUniqueId(prefix: string, value?: string) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n","function createAdjustmentFn(modifier: number) {\n  return <T extends Record<U, number>, U extends string>(\n    object: T,\n    ...adjustments: Partial<T>[]\n  ): T => {\n    return adjustments.reduce<T>(\n      (accumulator, adjustment) => {\n        const entries = Object.entries(adjustment) as [U, number][];\n\n        for (const [key, valueAdjustment] of entries) {\n          const value = accumulator[key];\n\n          if (value != null) {\n            accumulator[key] = (value + modifier * valueAdjustment) as T[U];\n          }\n        }\n\n        return accumulator;\n      },\n      {\n        ...object,\n      }\n    );\n  };\n}\n\nexport const add = createAdjustmentFn(1);\nexport const subtract = createAdjustmentFn(-1);\n","export function hasViewportRelativeCoordinates(\n  event: Event\n): event is Event & Pick<PointerEvent, 'clientX' | 'clientY'> {\n  return 'clientX' in event && 'clientY' in event;\n}\n","import {getWindow} from '../execution-context';\n\nexport function isKeyboardEvent(\n  event: Event | undefined | null\n): event is KeyboardEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {KeyboardEvent} = getWindow(event.target);\n\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n","import {getWindow} from '../execution-context';\n\nexport function isTouchEvent(\n  event: Event | undefined | null\n): event is TouchEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {TouchEvent} = getWindow(event.target);\n\n  return TouchEvent && event instanceof TouchEvent;\n}\n","import type {Coordinates} from './types';\nimport {isTouchEvent, hasViewportRelativeCoordinates} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates | null {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return null;\n}\n","export type Transform = {\n  x: number;\n  y: number;\n  scaleX: number;\n  scaleY: number;\n};\n\nexport interface Transition {\n  property: string;\n  easing: string;\n  duration: number;\n}\n\nexport const CSS = Object.freeze({\n  Translate: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {x, y} = transform;\n\n      return `translate3d(${x ? Math.round(x) : 0}px, ${\n        y ? Math.round(y) : 0\n      }px, 0)`;\n    },\n  },\n  Scale: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {scaleX, scaleY} = transform;\n\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    },\n  },\n  Transform: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      return [\n        CSS.Translate.toString(transform),\n        CSS.Scale.toString(transform),\n      ].join(' ');\n    },\n  },\n  Transition: {\n    toString({property, duration, easing}: Transition) {\n      return `${property} ${duration}ms ${easing}`;\n    },\n  },\n});\n","const SELECTOR =\n  'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\n\nexport function findFirstFocusableNode(\n  element: HTMLElement\n): HTMLElement | null {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}