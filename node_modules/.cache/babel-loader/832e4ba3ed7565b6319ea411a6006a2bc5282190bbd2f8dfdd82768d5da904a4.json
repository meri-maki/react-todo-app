{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/src/components/Todos/TodoEditInput.jsx\";\n/* import React /* ,{ useRef, useEffect, useState, useCallback } from \"react\" */\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { MdDoneOutline } from \"react-icons/md\";\nimport styles from \"./TodoEditInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoEditInput(_ref) {\n  let {\n    setEditedTodo,\n    editedTodo,\n    editTodo,\n    todo\n  } = _ref;\n  const onKeyDownHandler = event => {\n    if (event.key === \"Enter\") {\n      editTodo(todo.id);\n    }\n  };\n\n  /* const inputEditRef = useRef(null)\n  useEffect(() => inputEditRef.current.focus()) */\n\n  /*   const [type, setType] = useState(\"text\")\n    const inputRef = useRef(null)\n    const onToggle = useCallback(() => {\n      setType((current) => (type === \"text\" ? \"password\" : \"text\"))\n      // Setting focus here\n      inputRef.current.focus()\n    }, [])\n    useEffect(() => {\n      // Moving cursor to the end\n      inputRef.current.selectionStart = inputRef.current.value.length\n      inputRef.current.selectionEnd = inputRef.current.value.length\n    }, [type]) */\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${styles.editForm} editFormInput`,\n    children: [/*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      autoFocus: true,\n      spellCheck: false,\n      className: styles.editInput\n      /* type=\"type\" */,\n      placeholder: todo.text,\n      value: editedTodo,\n      onChange: e => setEditedTodo(e.target.value),\n      onKeyDown: onKeyDownHandler\n      /* ref={inputRef} */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.editIconContainer,\n      children: /*#__PURE__*/_jsxDEV(MdDoneOutline, {\n        className: styles.editIcon,\n        onClick: () => editTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoEditInput;\nexport default TodoEditInput;\n\n/* onClick={() => {\n            onToggle()\n            if (!editedTodo || /^\\s*$/.test(editedTodo)) {\n              //prevents only spaces to be count as input\n              return\n            }\n            editTodo(todo.id)\n          } */\nvar _c;\n$RefreshReg$(_c, \"TodoEditInput\");","map":{"version":3,"names":["TextareaAutosize","MdDoneOutline","styles","TodoEditInput","setEditedTodo","editedTodo","editTodo","todo","onKeyDownHandler","event","key","id","editForm","editInput","text","e","target","value","editIconContainer","editIcon"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/src/components/Todos/TodoEditInput.jsx"],"sourcesContent":["/* import React /* ,{ useRef, useEffect, useState, useCallback } from \"react\" */\nimport TextareaAutosize from \"react-textarea-autosize\"\nimport { MdDoneOutline } from \"react-icons/md\"\n\nimport styles from \"./TodoEditInput.module.css\"\n\nfunction TodoEditInput({\n  setEditedTodo,\n  editedTodo,\n  editTodo,\n  todo,\n}) {\n  const onKeyDownHandler = (event) => {\n    if (event.key === \"Enter\") {\n      editTodo(todo.id)\n    }\n  }\n\n  /* const inputEditRef = useRef(null)\n  useEffect(() => inputEditRef.current.focus()) */\n\n\n/*   const [type, setType] = useState(\"text\")\n  const inputRef = useRef(null)\n  const onToggle = useCallback(() => {\n    setType((current) => (type === \"text\" ? \"password\" : \"text\"))\n    // Setting focus here\n    inputRef.current.focus()\n  }, [])\n  useEffect(() => {\n    // Moving cursor to the end\n    inputRef.current.selectionStart = inputRef.current.value.length\n    inputRef.current.selectionEnd = inputRef.current.value.length\n  }, [type]) */\n\n  return (\n    <form className={`${styles.editForm} editFormInput`}>\n      <TextareaAutosize\n        autoFocus\n        spellCheck={false}\n        className={styles.editInput}\n        /* type=\"type\" */\n        placeholder={todo.text}\n        value={editedTodo}\n        onChange={(e) => setEditedTodo(e.target.value)}\n        onKeyDown={onKeyDownHandler}\n        /* ref={inputRef} */\n      />\n      <div className={styles.editIconContainer}>\n        <MdDoneOutline\n          className={styles.editIcon}\n          onClick={() => editTodo(todo.id)}\n        />\n\n      </div>\n    </form>\n  )\n}\n\nexport default TodoEditInput\n\n\n/* onClick={() => {\n            onToggle()\n            if (!editedTodo || /^\\s*$/.test(editedTodo)) {\n              //prevents only spaces to be count as input\n              return\n            }\n            editTodo(todo.id)\n          } */"],"mappings":";AAAA;AACA,OAAOA,gBAAgB,MAAM,yBAAyB;AACtD,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,OAAOC,MAAM,MAAM,4BAA4B;AAAA;AAE/C,SAASC,aAAa,OAKnB;EAAA,IALoB;IACrBC,aAAa;IACbC,UAAU;IACVC,QAAQ;IACRC;EACF,CAAC;EACC,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBJ,QAAQ,CAACC,IAAI,CAACI,EAAE,CAAC;IACnB;EACF,CAAC;;EAED;AACF;;EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE;IAAM,SAAS,EAAG,GAAET,MAAM,CAACU,QAAS,gBAAgB;IAAA,wBAClD,QAAC,gBAAgB;MACf,SAAS;MACT,UAAU,EAAE,KAAM;MAClB,SAAS,EAAEV,MAAM,CAACW;MAClB;MACA,WAAW,EAAEN,IAAI,CAACO,IAAK;MACvB,KAAK,EAAET,UAAW;MAClB,QAAQ,EAAGU,CAAC,IAAKX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC/C,SAAS,EAAET;MACX;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACF;MAAK,SAAS,EAAEN,MAAM,CAACgB,iBAAkB;MAAA,uBACvC,QAAC,aAAa;QACZ,SAAS,EAAEhB,MAAM,CAACiB,QAAS;QAC3B,OAAO,EAAE,MAAMb,QAAQ,CAACC,IAAI,CAACI,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA;IACjC;MAAA;MAAA;MAAA;IAAA,QAEE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,KAnDQR,aAAa;AAqDtB,eAAeA,aAAa;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}