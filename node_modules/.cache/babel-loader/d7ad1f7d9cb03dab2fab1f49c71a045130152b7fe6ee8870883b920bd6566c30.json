{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useMemo, useRef } from 'react';\nimport useMountedState from './useMountedState';\nimport useUpdate from './useUpdate';\nimport useUpdateEffect from './useUpdateEffect';\nexport default function useStateList(stateSet) {\n  if (stateSet === void 0) {\n    stateSet = [];\n  }\n  var isMounted = useMountedState();\n  var update = useUpdate();\n  var index = useRef(0);\n  // If new state list is shorter that before - switch to the last element\n  useUpdateEffect(function () {\n    if (stateSet.length <= index.current) {\n      index.current = stateSet.length - 1;\n      update();\n    }\n  }, [stateSet.length]);\n  var actions = useMemo(function () {\n    return {\n      next: function next() {\n        return actions.setStateAt(index.current + 1);\n      },\n      prev: function prev() {\n        return actions.setStateAt(index.current - 1);\n      },\n      setStateAt: function setStateAt(newIndex) {\n        // do nothing on unmounted component\n        if (!isMounted()) return;\n        // do nothing on empty states list\n        if (!stateSet.length) return;\n        // in case new index is equal current - do nothing\n        if (newIndex === index.current) return;\n        // it gives the ability to travel through the left and right borders.\n        // 4ex: if list contains 5 elements, attempt to set index 9 will bring use to 5th element\n        // in case of negative index it will start counting from the right, so -17 will bring us to 4th element\n        index.current = newIndex >= 0 ? newIndex % stateSet.length : stateSet.length + newIndex % stateSet.length;\n        update();\n      },\n      setState: function setState(state) {\n        // do nothing on unmounted component\n        if (!isMounted()) return;\n        var newIndex = stateSet.length ? stateSet.indexOf(state) : -1;\n        if (newIndex === -1) {\n          throw new Error(\"State '\" + state + \"' is not a valid state (does not exist in state list)\");\n        }\n        index.current = newIndex;\n        update();\n      }\n    };\n  }, [stateSet]);\n  return __assign({\n    state: stateSet[index.current],\n    currentIndex: index.current\n  }, actions);\n}","map":{"version":3,"names":["__assign","useMemo","useRef","useMountedState","useUpdate","useUpdateEffect","useStateList","stateSet","isMounted","update","index","length","current","actions","next","setStateAt","prev","newIndex","setState","state","indexOf","Error","currentIndex"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/react-use/esm/useStateList.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useMemo, useRef } from 'react';\nimport useMountedState from './useMountedState';\nimport useUpdate from './useUpdate';\nimport useUpdateEffect from './useUpdateEffect';\nexport default function useStateList(stateSet) {\n    if (stateSet === void 0) { stateSet = []; }\n    var isMounted = useMountedState();\n    var update = useUpdate();\n    var index = useRef(0);\n    // If new state list is shorter that before - switch to the last element\n    useUpdateEffect(function () {\n        if (stateSet.length <= index.current) {\n            index.current = stateSet.length - 1;\n            update();\n        }\n    }, [stateSet.length]);\n    var actions = useMemo(function () { return ({\n        next: function () { return actions.setStateAt(index.current + 1); },\n        prev: function () { return actions.setStateAt(index.current - 1); },\n        setStateAt: function (newIndex) {\n            // do nothing on unmounted component\n            if (!isMounted())\n                return;\n            // do nothing on empty states list\n            if (!stateSet.length)\n                return;\n            // in case new index is equal current - do nothing\n            if (newIndex === index.current)\n                return;\n            // it gives the ability to travel through the left and right borders.\n            // 4ex: if list contains 5 elements, attempt to set index 9 will bring use to 5th element\n            // in case of negative index it will start counting from the right, so -17 will bring us to 4th element\n            index.current =\n                newIndex >= 0\n                    ? newIndex % stateSet.length\n                    : stateSet.length + (newIndex % stateSet.length);\n            update();\n        },\n        setState: function (state) {\n            // do nothing on unmounted component\n            if (!isMounted())\n                return;\n            var newIndex = stateSet.length ? stateSet.indexOf(state) : -1;\n            if (newIndex === -1) {\n                throw new Error(\"State '\" + state + \"' is not a valid state (does not exist in state list)\");\n            }\n            index.current = newIndex;\n            update();\n        },\n    }); }, [stateSet]);\n    return __assign({ state: stateSet[index.current], currentIndex: index.current }, actions);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,eAAe,SAASC,YAAY,CAACC,QAAQ,EAAE;EAC3C,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;IAAEA,QAAQ,GAAG,EAAE;EAAE;EAC1C,IAAIC,SAAS,GAAGL,eAAe,EAAE;EACjC,IAAIM,MAAM,GAAGL,SAAS,EAAE;EACxB,IAAIM,KAAK,GAAGR,MAAM,CAAC,CAAC,CAAC;EACrB;EACAG,eAAe,CAAC,YAAY;IACxB,IAAIE,QAAQ,CAACI,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;MAClCF,KAAK,CAACE,OAAO,GAAGL,QAAQ,CAACI,MAAM,GAAG,CAAC;MACnCF,MAAM,EAAE;IACZ;EACJ,CAAC,EAAE,CAACF,QAAQ,CAACI,MAAM,CAAC,CAAC;EACrB,IAAIE,OAAO,GAAGZ,OAAO,CAAC,YAAY;IAAE,OAAQ;MACxCa,IAAI,EAAE,gBAAY;QAAE,OAAOD,OAAO,CAACE,UAAU,CAACL,KAAK,CAACE,OAAO,GAAG,CAAC,CAAC;MAAE,CAAC;MACnEI,IAAI,EAAE,gBAAY;QAAE,OAAOH,OAAO,CAACE,UAAU,CAACL,KAAK,CAACE,OAAO,GAAG,CAAC,CAAC;MAAE,CAAC;MACnEG,UAAU,EAAE,oBAAUE,QAAQ,EAAE;QAC5B;QACA,IAAI,CAACT,SAAS,EAAE,EACZ;QACJ;QACA,IAAI,CAACD,QAAQ,CAACI,MAAM,EAChB;QACJ;QACA,IAAIM,QAAQ,KAAKP,KAAK,CAACE,OAAO,EAC1B;QACJ;QACA;QACA;QACAF,KAAK,CAACE,OAAO,GACTK,QAAQ,IAAI,CAAC,GACPA,QAAQ,GAAGV,QAAQ,CAACI,MAAM,GAC1BJ,QAAQ,CAACI,MAAM,GAAIM,QAAQ,GAAGV,QAAQ,CAACI,MAAO;QACxDF,MAAM,EAAE;MACZ,CAAC;MACDS,QAAQ,EAAE,kBAAUC,KAAK,EAAE;QACvB;QACA,IAAI,CAACX,SAAS,EAAE,EACZ;QACJ,IAAIS,QAAQ,GAAGV,QAAQ,CAACI,MAAM,GAAGJ,QAAQ,CAACa,OAAO,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7D,IAAIF,QAAQ,KAAK,CAAC,CAAC,EAAE;UACjB,MAAM,IAAII,KAAK,CAAC,SAAS,GAAGF,KAAK,GAAG,uDAAuD,CAAC;QAChG;QACAT,KAAK,CAACE,OAAO,GAAGK,QAAQ;QACxBR,MAAM,EAAE;MACZ;IACJ,CAAC;EAAG,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAClB,OAAOP,QAAQ,CAAC;IAAEmB,KAAK,EAAEZ,QAAQ,CAACG,KAAK,CAACE,OAAO,CAAC;IAAEU,YAAY,EAAEZ,KAAK,CAACE;EAAQ,CAAC,EAAEC,OAAO,CAAC;AAC7F"},"metadata":{},"sourceType":"module","externalDependencies":[]}