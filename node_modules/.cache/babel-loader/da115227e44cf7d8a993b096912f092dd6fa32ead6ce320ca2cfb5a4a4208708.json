{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isNavigator, off, on } from './misc/util';\nimport isDeepEqual from './misc/isDeepEqual';\nvar nav = isNavigator ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\nfunction useBatteryMock() {\n  return {\n    isSupported: false\n  };\n}\nfunction useBattery() {\n  var _a = useState({\n      isSupported: true,\n      fetched: false\n    }),\n    state = _a[0],\n    setState = _a[1];\n  useEffect(function () {\n    var isMounted = true;\n    var battery = null;\n    var handleChange = function handleChange() {\n      if (!isMounted || !battery) {\n        return;\n      }\n      var newState = {\n        isSupported: true,\n        fetched: true,\n        level: battery.level,\n        charging: battery.charging,\n        dischargingTime: battery.dischargingTime,\n        chargingTime: battery.chargingTime\n      };\n      !isDeepEqual(state, newState) && setState(newState);\n    };\n    nav.getBattery().then(function (bat) {\n      if (!isMounted) {\n        return;\n      }\n      battery = bat;\n      on(battery, 'chargingchange', handleChange);\n      on(battery, 'chargingtimechange', handleChange);\n      on(battery, 'dischargingtimechange', handleChange);\n      on(battery, 'levelchange', handleChange);\n      handleChange();\n    });\n    return function () {\n      isMounted = false;\n      if (battery) {\n        off(battery, 'chargingchange', handleChange);\n        off(battery, 'chargingtimechange', handleChange);\n        off(battery, 'dischargingtimechange', handleChange);\n        off(battery, 'levelchange', handleChange);\n      }\n    };\n  }, []);\n  return state;\n}\nexport default isBatteryApiSupported ? useBattery : useBatteryMock;","map":{"version":3,"names":["useEffect","useState","isNavigator","off","on","isDeepEqual","nav","navigator","undefined","isBatteryApiSupported","getBattery","useBatteryMock","isSupported","useBattery","_a","fetched","state","setState","isMounted","battery","handleChange","newState","level","charging","dischargingTime","chargingTime","then","bat"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/react-use/esm/useBattery.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isNavigator, off, on } from './misc/util';\nimport isDeepEqual from './misc/isDeepEqual';\nvar nav = isNavigator ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\nfunction useBatteryMock() {\n    return { isSupported: false };\n}\nfunction useBattery() {\n    var _a = useState({ isSupported: true, fetched: false }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var isMounted = true;\n        var battery = null;\n        var handleChange = function () {\n            if (!isMounted || !battery) {\n                return;\n            }\n            var newState = {\n                isSupported: true,\n                fetched: true,\n                level: battery.level,\n                charging: battery.charging,\n                dischargingTime: battery.dischargingTime,\n                chargingTime: battery.chargingTime,\n            };\n            !isDeepEqual(state, newState) && setState(newState);\n        };\n        nav.getBattery().then(function (bat) {\n            if (!isMounted) {\n                return;\n            }\n            battery = bat;\n            on(battery, 'chargingchange', handleChange);\n            on(battery, 'chargingtimechange', handleChange);\n            on(battery, 'dischargingtimechange', handleChange);\n            on(battery, 'levelchange', handleChange);\n            handleChange();\n        });\n        return function () {\n            isMounted = false;\n            if (battery) {\n                off(battery, 'chargingchange', handleChange);\n                off(battery, 'chargingtimechange', handleChange);\n                off(battery, 'dischargingtimechange', handleChange);\n                off(battery, 'levelchange', handleChange);\n            }\n        };\n    }, []);\n    return state;\n}\nexport default isBatteryApiSupported ? useBattery : useBatteryMock;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,GAAG,EAAEC,EAAE,QAAQ,aAAa;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,IAAIC,GAAG,GAAGJ,WAAW,GAAGK,SAAS,GAAGC,SAAS;AAC7C,IAAIC,qBAAqB,GAAGH,GAAG,IAAI,OAAOA,GAAG,CAACI,UAAU,KAAK,UAAU;AACvE,SAASC,cAAc,GAAG;EACtB,OAAO;IAAEC,WAAW,EAAE;EAAM,CAAC;AACjC;AACA,SAASC,UAAU,GAAG;EAClB,IAAIC,EAAE,GAAGb,QAAQ,CAAC;MAAEW,WAAW,EAAE,IAAI;MAAEG,OAAO,EAAE;IAAM,CAAC,CAAC;IAAEC,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,QAAQ,GAAGH,EAAE,CAAC,CAAC,CAAC;EACzFd,SAAS,CAAC,YAAY;IAClB,IAAIkB,SAAS,GAAG,IAAI;IACpB,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAIC,YAAY,GAAG,SAAfA,YAAY,GAAe;MAC3B,IAAI,CAACF,SAAS,IAAI,CAACC,OAAO,EAAE;QACxB;MACJ;MACA,IAAIE,QAAQ,GAAG;QACXT,WAAW,EAAE,IAAI;QACjBG,OAAO,EAAE,IAAI;QACbO,KAAK,EAAEH,OAAO,CAACG,KAAK;QACpBC,QAAQ,EAAEJ,OAAO,CAACI,QAAQ;QAC1BC,eAAe,EAAEL,OAAO,CAACK,eAAe;QACxCC,YAAY,EAAEN,OAAO,CAACM;MAC1B,CAAC;MACD,CAACpB,WAAW,CAACW,KAAK,EAAEK,QAAQ,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC;IACvD,CAAC;IACDf,GAAG,CAACI,UAAU,EAAE,CAACgB,IAAI,CAAC,UAAUC,GAAG,EAAE;MACjC,IAAI,CAACT,SAAS,EAAE;QACZ;MACJ;MACAC,OAAO,GAAGQ,GAAG;MACbvB,EAAE,CAACe,OAAO,EAAE,gBAAgB,EAAEC,YAAY,CAAC;MAC3ChB,EAAE,CAACe,OAAO,EAAE,oBAAoB,EAAEC,YAAY,CAAC;MAC/ChB,EAAE,CAACe,OAAO,EAAE,uBAAuB,EAAEC,YAAY,CAAC;MAClDhB,EAAE,CAACe,OAAO,EAAE,aAAa,EAAEC,YAAY,CAAC;MACxCA,YAAY,EAAE;IAClB,CAAC,CAAC;IACF,OAAO,YAAY;MACfF,SAAS,GAAG,KAAK;MACjB,IAAIC,OAAO,EAAE;QACThB,GAAG,CAACgB,OAAO,EAAE,gBAAgB,EAAEC,YAAY,CAAC;QAC5CjB,GAAG,CAACgB,OAAO,EAAE,oBAAoB,EAAEC,YAAY,CAAC;QAChDjB,GAAG,CAACgB,OAAO,EAAE,uBAAuB,EAAEC,YAAY,CAAC;QACnDjB,GAAG,CAACgB,OAAO,EAAE,aAAa,EAAEC,YAAY,CAAC;MAC7C;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAOJ,KAAK;AAChB;AACA,eAAeP,qBAAqB,GAAGI,UAAU,GAAGF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}