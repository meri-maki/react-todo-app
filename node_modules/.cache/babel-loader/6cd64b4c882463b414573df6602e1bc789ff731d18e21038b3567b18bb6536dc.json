{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.divWrapper = void 0;\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar addClassDecoratorSupport_1 = tslib_1.__importDefault(require(\"./addClassDecoratorSupport\"));\nvar h = React.createElement;\nvar noWrap = function (Comp, propName, props, state) {\n  var _a;\n  return h(Comp, propName ? tslib_1.__assign((_a = {}, _a[propName] = state, _a), props) : tslib_1.__assign(tslib_1.__assign({}, state), props));\n};\nexports.divWrapper = function (Comp, propName, props, state) {\n  return h('div', null, noWrap(Comp, propName, props, state));\n};\nvar createEnhancer = function (Facc, prop, wrapper) {\n  if (wrapper === void 0) {\n    wrapper = noWrap;\n  }\n  var enhancer = function (Comp, propName, faccProps) {\n    if (propName === void 0) {\n      propName = prop;\n    }\n    if (faccProps === void 0) {\n      faccProps = null;\n    }\n    var isClassDecoratorMethodCall = typeof Comp === 'string';\n    if (isClassDecoratorMethodCall) {\n      return function (Klass) {\n        return enhancer(Klass, Comp || prop, propName);\n      };\n    }\n    var Enhanced = function (props) {\n      return h(Facc, faccProps, function (state) {\n        return wrapper(Comp, propName, props, state);\n      });\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      Enhanced.displayName = (Facc.displayName || Facc.name) + \"(\" + (Comp.displayName || Comp.name) + \")\";\n    }\n    return isClassDecoratorMethodCall ? addClassDecoratorSupport_1.default(Enhanced) : Enhanced;\n  };\n  return enhancer;\n};\nexports.default = createEnhancer;","map":{"version":3,"mappings":";;;;;;;AAAA;AACA;AAEA,IAAMA,CAAC,GAAGC,KAAK,CAACC,aAAa;AAE7B,IAAMC,MAAM,GAAG,UAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK;;EAAK,QAAC,CAACH,IAAI,EAAEC,QAAQ,GAAEG,8BAC/DH,QAAQ,IAAGE,KAAK,OAAKD,KAAK,IAAGE,sCAC3BD,KAAK,GAAKD,KAAK,CAAC,CACrB;AAHgD,CAGhD;AAEYG,kBAAU,GAAG,UAACL,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK;EACrD,QAAC,CAAC,KAAK,EAAE,IAAI,EAAEJ,MAAM,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAC,CAAQ;AAA3D,CAA2D;AAE7D,IAAMG,cAAc,GAAG,UAACC,IAAI,EAAEC,IAAa,EAAEC,OAAgB;EAAhB;IAAAA,gBAAgB;EAAA;EACzD,IAAMC,QAAQ,GAAG,UAACV,IAAI,EAAEC,QAAoB,EAAEU,SAAwB;IAA9C;MAAAV,eAAoB;IAAA;IAAE;MAAAU,gBAAwB;IAAA;IAClE,IAAMC,0BAA0B,GAAG,OAAOZ,IAAI,KAAK,QAAQ;IAE3D,IAAIY,0BAA0B,EAAE;MAC5B,OAAO,UAACC,KAAK;QAAK,eAAQ,CAACA,KAAK,EAAEb,IAAW,IAAIQ,IAAI,EAAEP,QAAe,CAAC;MAArD,CAAqD;;IAG3E,IAAMa,QAAQ,GAAG,UAACZ,KAAK;MACnB,QAAC,CAACK,IAAI,EAAEI,SAAS,EAAE,UAACR,KAAK;QAAK,cAAO,CAACH,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAC;MAArC,CAAqC,CAAC;IAApE,CAAoE;IAExE,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACtCH,QAAgB,CAACI,WAAW,GAAG,CAAGX,IAAI,CAACW,WAAW,IAAIX,IAAI,CAACY,IAAI,WAAInB,IAAI,CAACkB,WAAW,IAAIlB,IAAI,CAACmB,IAAI,OAAG;;IAGxG,OAAOP,0BAA0B,GAAGQ,kCAAwB,CAACN,QAAQ,CAAC,GAAGA,QAAQ;EACrF,CAAC;EAED,OAAOJ,QAAQ;AACnB,CAAC;AAEDL,kBAAeC,cAAc","names":["h","React","createElement","noWrap","Comp","propName","props","state","tslib_1","exports","createEnhancer","Facc","prop","wrapper","enhancer","faccProps","isClassDecoratorMethodCall","Klass","Enhanced","process","env","NODE_ENV","displayName","name","addClassDecoratorSupport_1"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/node_modules/react-universal-interface/src/createEnhancer.ts"],"sourcesContent":["import * as React from 'react';\nimport addClassDecoratorSupport from './addClassDecoratorSupport';\n\nconst h = React.createElement;\n\nconst noWrap = (Comp, propName, props, state) => h(Comp, propName ?\n  {[propName]: state, ...props} :\n  {...state, ...props}\n);\n\nexport const divWrapper = (Comp, propName, props, state) =>\n  h('div', null, noWrap(Comp, propName, props, state)) as any;\n\nconst createEnhancer = (Facc, prop?: string, wrapper = noWrap) => {\n    const enhancer = (Comp, propName: any = prop, faccProps: object = null) => {\n        const isClassDecoratorMethodCall = typeof Comp === 'string';\n\n        if (isClassDecoratorMethodCall) {\n            return (Klass) => enhancer(Klass, Comp as any || prop, propName as any);\n        }\n\n        const Enhanced = (props) =>\n            h(Facc, faccProps, (state) => wrapper(Comp, propName, props, state));\n\n        if (process.env.NODE_ENV !== 'production') {\n            (Enhanced as any).displayName = `${Facc.displayName || Facc.name}(${Comp.displayName || Comp.name})`;\n        }\n\n        return isClassDecoratorMethodCall ? addClassDecoratorSupport(Enhanced) : Enhanced;\n    };\n\n    return enhancer;\n}\n\nexport default createEnhancer;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}