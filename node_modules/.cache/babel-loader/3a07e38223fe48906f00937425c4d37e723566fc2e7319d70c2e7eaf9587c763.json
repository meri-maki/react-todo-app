{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/src/components/Todos/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { DndContext, closestCenter } from \"@dnd-kit/core\";\nimport { SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport { restrictToVerticalAxis, restrictToWindowEdges } from \"@dnd-kit/modifiers\";\nimport styles from \"./TodoList.module.css\";\nimport Todo from \"./Todo\";\n/* \nconst Todo = React.lazy(() =>import(\"./Todo\")) */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    todos,\n    toggleTodo,\n    deleteTodo,\n    setEditedTodo,\n    setEditID,\n    editedTodo,\n    editID,\n    editTodo,\n    handleDragEnd\n  } = _ref;\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.todoListContainer\n    /* onClick={(e) => e.stopPropagation()} */,\n    children: [!todos.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"The list is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      collisionDetection: closestCenter,\n      onDragEnd: handleDragEnd,\n      modifiers: [restrictToVerticalAxis, restrictToWindowEdges],\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: todos,\n        strategy: verticalListSortingStrategy,\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo\n        /* classname={todo.isCompleted ? 'completedTodo' : ''} */, {\n          todo: todo,\n          toggleTodo: toggleTodo,\n          deleteTodo: deleteTodo,\n          editTodo: editTodo,\n          setEditedTodo: setEditedTodo,\n          setEditID: setEditID,\n          editedTodo: editedTodo,\n          editID: editID\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"qTUGUEQXLZuA6VhIU4W70LX8u1Y=\", true);\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","restrictToVerticalAxis","restrictToWindowEdges","styles","Todo","TodoList","todos","toggleTodo","deleteTodo","setEditedTodo","setEditID","editedTodo","editID","editTodo","handleDragEnd","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","todoListContainer","length","map","todo","id"],"sources":["/Users/anastasiazhuravleva/CODING/PROJECTS/todo-app-v5/src/components/Todos/TodoList.jsx"],"sourcesContent":["import React from \"react\"\nimport { DndContext, closestCenter } from \"@dnd-kit/core\"\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\"\nimport {\n  restrictToVerticalAxis,\n  restrictToWindowEdges,\n} from \"@dnd-kit/modifiers\"\nimport styles from \"./TodoList.module.css\"\nimport Todo from \"./Todo\"\n/* \nconst Todo = React.lazy(() =>import(\"./Todo\")) */\n\nfunction TodoList({\n  todos,\n  toggleTodo,\n  deleteTodo,\n  setEditedTodo,\n  setEditID,\n  editedTodo,\n  editID,\n  editTodo,\n  handleDragEnd,\n}) {\n\n\nconst sensors = useSensors(\n  useSensor(PointerSensor),\n  useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates,\n  })\n)\n\n  return (\n    <div\n      className={styles.todoListContainer}\n      /* onClick={(e) => e.stopPropagation()} */\n    >\n      {!todos.length && <h2>The list is empty</h2>}\n      <DndContext\n        collisionDetection={closestCenter}\n        onDragEnd={handleDragEnd}\n        modifiers={[restrictToVerticalAxis, restrictToWindowEdges]}\n      >\n        <SortableContext items={todos} strategy={verticalListSortingStrategy}>\n          {todos.map((todo) => (\n            <Todo\n              /* classname={todo.isCompleted ? 'completedTodo' : ''} */\n              todo={todo}\n              key={todo.id}\n              toggleTodo={toggleTodo}\n              deleteTodo={deleteTodo}\n              editTodo={editTodo}\n              setEditedTodo={setEditedTodo}\n              setEditID={setEditID}\n              editedTodo={editedTodo}\n              editID={editID}\n            />\n          ))}\n        </SortableContext>\n      </DndContext>\n    </div>\n  )\n}\n\nexport default TodoList\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,aAAa,QAAQ,eAAe;AACzD,SACEC,eAAe,EACfC,2BAA2B,QACtB,mBAAmB;AAC1B,SACEC,sBAAsB,EACtBC,qBAAqB,QAChB,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA;AADA;AAGA,SAASC,QAAQ,OAUd;EAAA;EAAA,IAVe;IAChBC,KAAK;IACLC,UAAU;IACVC,UAAU;IACVC,aAAa;IACbC,SAAS;IACTC,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRC;EACF,CAAC;EAGD,MAAMC,OAAO,GAAGC,UAAU,CACxBC,SAAS,CAACC,aAAa,CAAC,EACxBD,SAAS,CAACE,cAAc,EAAE;IACxBC,gBAAgB,EAAEC;EACpB,CAAC,CAAC,CACH;EAEC,oBACE;IACE,SAAS,EAAElB,MAAM,CAACmB;IAClB;IAAA,WAEC,CAAChB,KAAK,CAACiB,MAAM,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC5C,QAAC,UAAU;MACT,kBAAkB,EAAEzB,aAAc;MAClC,SAAS,EAAEgB,aAAc;MACzB,SAAS,EAAE,CAACb,sBAAsB,EAAEC,qBAAqB,CAAE;MAAA,uBAE3D,QAAC,eAAe;QAAC,KAAK,EAAEI,KAAM;QAAC,QAAQ,EAAEN,2BAA4B;QAAA,UAClEM,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACd,QAAC;QACC;UACA,IAAI,EAAEA,IAAK;UAEX,UAAU,EAAElB,UAAW;UACvB,UAAU,EAAEC,UAAW;UACvB,QAAQ,EAAEK,QAAS;UACnB,aAAa,EAAEJ,aAAc;UAC7B,SAAS,EAAEC,SAAU;UACrB,UAAU,EAAEC,UAAW;UACvB,MAAM,EAAEC;QAAO,GAPVa,IAAI,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QASf;MAAC;QAAA;QAAA;QAAA;MAAA;IACc;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;AAAC,GAlDQrB,QAAQ;AAAA,KAARA,QAAQ;AAoDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}